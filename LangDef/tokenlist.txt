Accepted syntax in Regal


All Unicode whitespace characters besides the newline character are ignored between tokens.

Most tokens are separated by whitespace. No token can contain whitespace characters.

All tokens are case-sensitive. There are no capital letters in keywords.



Declarative tokens:

    Variable/function labels: Variable/function labels must start with a letter or '_' followed by 
    any number of alphanumeric characters as well as '_'.

    'let': Denotes the assignment of a new variable or function. (i.e. 'let x = 3')

    'now': Denotes the reassigment/retyping of an existing variable or function. (i.e. 'now x = true')

    '=': Assigns the given variable/function label to the given expression.


Integer tokens:

    Integers: Signed whole numbers. Negative integers cannot have whitespace between 
    the '-' and number characters.

    '**': Two asterisks denote an exponential relationship between integers. (i.e. '2**3' is 2 to the 3rd power)

    '+': Adds two integers.

    '-': Subtracts two integers.

    '*': Multiplies two integers.

    '/': Divides two integters and truncates any decimal digits.

    '(': Denotes math groupings to assign an order of opoerations to equations.

    ')': Closes math groupings.


Special tokens:

    'nothing': The equivalent of 'NULL', 'nil', or '()' in other languages.

    '\n': The newline character separates expressions.